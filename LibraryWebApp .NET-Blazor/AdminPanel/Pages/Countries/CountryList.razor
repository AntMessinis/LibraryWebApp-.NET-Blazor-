@page "/countries"
@inject ICountryRepository _countryRepository

<div class="row">
    <div class="col-6">
        <h4 class="card-title text-primary">Product List</h4>
    </div>
    <div class="col-4 offset-2">
        <a href="/countries/create" class="btn btn-primary form-control">Add new Country</a>
    </div>
    <dic class="col-12 mt-2">
    @if (IsLoading)
    {
                <div class="text-center">
                <img src="/images/loading.gif">
                    </div>
    } else {
        if (Countries.Any())
        {
            <table class="table table-bordered">
                <thead>
                    <tr>
                                <th scope="col">Id</th>
                                <th scope="col">Country</th>
                                <th scope="col">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var country in Countries)
                        {
                            <tr>
                                <td>@country.Id</td>
                                <td>@country.CountryName</td>
                                <td>
                                    <div>
                                        <NavLink href="@($"/countries/update/{country.Id}")" class="btn btn-warning">Update</NavLink>
                                        <button class="btn btn-danger">Delete</button>
                                    </div>
                                </td>
                            </tr>
                        }
                </tbody>
            </table>
        }else {
            <p>There are no Countries in the Database!</p>
        }
    }
    </dic>
</div>

@code {
    private IEnumerable<CountryDto> Countries { get; set; } = new List<CountryDto>();
    private bool IsLoading { get; set; } = true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Countries = await _countryRepository.GetAll();
            IsLoading = false;
            StateHasChanged();
        }
    }
}
