@page "/users"
@inject IUserRepository _userRepository
@inject IJSRuntime _jsRuntime
<div class="row">
    <div class="col-6">
        <h3 class="card-title text-primary">User List</h3>
    </div>
    <div class="col-12 p-4">
        @if (Users.Any())
        {
            <table>
                <thead>
                    <tr>
                        <th scope="col">Id</th>
                        <th scope="col">Username</th>
                        <th scope="col">Email</th>
                        <th scope="col">Firstname</th>
                        <th scope="col">Lastname</th>
                        <th scope="col">View Account Details</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in Users)
                    {
                        <tr>
                            <td>@user.Id</td>
                            <td>@user.Username</td>
                            <td>@user.Email</td>
                            <td>@user.UserMemberhipDetails.Firstname</td>
                            <td>@user.UserMemberhipDetails.Lastname</td>
                            <td><NavLink href=@($"/users/details/{user.Id}")></NavLink></td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            @if (IsLoading)
            {
               <img src="/images/loading.gif" /> 
            }
            else
            {
                <p>There are no users in the database.</p>
            }
        }
    </div>
</div>
@code {
    public IEnumerable<UserDto> Users { get; set; } = new List<UserDto>();
    public bool IsLoading { get; set; } = true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadUsers();
        }
    }

    private async Task LoadUsers()
    {
        Users = await _userRepository.GetAll();
        IsLoading = false;
        StateHasChanged();
    }
}
